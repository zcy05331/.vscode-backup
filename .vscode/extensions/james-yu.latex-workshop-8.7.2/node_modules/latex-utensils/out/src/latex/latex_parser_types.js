"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function isTextString(node) {
    return node.kind === 'text.string';
}
exports.isTextString = isTextString;
function isCommand(node) {
    return node.kind === 'command';
}
exports.isCommand = isCommand;
function isAmsMathTextCommand(node) {
    return node.kind === 'command.text';
}
exports.isAmsMathTextCommand = isAmsMathTextCommand;
function isDefCommand(node) {
    return node.kind === 'command.def';
}
exports.isDefCommand = isDefCommand;
function isEnvironment(node) {
    return node.kind === 'env';
}
exports.isEnvironment = isEnvironment;
function isMathEnv(node) {
    return node.kind === 'env.math.align';
}
exports.isMathEnv = isMathEnv;
function isMathEnvAligned(node) {
    return node.kind === 'env.math.aligned';
}
exports.isMathEnvAligned = isMathEnvAligned;
function isGroup(node) {
    return node.kind === 'arg.group';
}
exports.isGroup = isGroup;
function isOptionalArg(node) {
    return node.kind === 'arg.optional';
}
exports.isOptionalArg = isOptionalArg;
function isParbreak(node) {
    return node.kind === 'parbreak';
}
exports.isParbreak = isParbreak;
function isSuperscript(node) {
    return node.kind === 'superscript';
}
exports.isSuperscript = isSuperscript;
function isSubscript(node) {
    return node.kind === 'subscript';
}
exports.isSubscript = isSubscript;
function isAlignmentTab(node) {
    return node.kind === 'alignmentTab';
}
exports.isAlignmentTab = isAlignmentTab;
function isCommandParameter(node) {
    return node.kind === 'commandParameter';
}
exports.isCommandParameter = isCommandParameter;
function isActiveCharacter(node) {
    return node.kind === 'activeCharacter';
}
exports.isActiveCharacter = isActiveCharacter;
function isIgnore(node) {
    return node.kind === 'ignore';
}
exports.isIgnore = isIgnore;
function isVerb(node) {
    return node.kind === 'verb';
}
exports.isVerb = isVerb;
function isVerbatim(node) {
    return node.kind === 'env.verbatim';
}
exports.isVerbatim = isVerbatim;
function isMinted(node) {
    return node.kind === 'env.minted';
}
exports.isMinted = isMinted;
function isLstlisting(node) {
    return node.kind === 'env.lstlisting';
}
exports.isLstlisting = isLstlisting;
function isInlienMath(node) {
    return node.kind === 'inlineMath';
}
exports.isInlienMath = isInlienMath;
function isDisplayMath(node) {
    return node.kind === 'displayMath';
}
exports.isDisplayMath = isDisplayMath;
function isMathCharacter(node) {
    return node.kind === 'math.character';
}
exports.isMathCharacter = isMathCharacter;
function isMathMatchingParen(node) {
    return node.kind === 'math.matching_paren';
}
exports.isMathMatchingParen = isMathMatchingParen;
function hasContent(node) {
    return node.hasOwnProperty('content');
}
exports.hasContent = hasContent;
function hasContentArray(node) {
    return node.hasOwnProperty('content') && Array.isArray(node['content']);
}
exports.hasContentArray = hasContentArray;
function hasArgsArray(node) {
    return node.hasOwnProperty('args') && Array.isArray(node['args']);
}
exports.hasArgsArray = hasArgsArray;
function isAstRoot(ast) {
    return ast.kind === 'ast.root';
}
exports.isAstRoot = isAstRoot;
function isAstPreamble(ast) {
    return ast.kind === 'ast.preamble';
}
exports.isAstPreamble = isAstPreamble;
//# sourceMappingURL=latex_parser_types.js.map