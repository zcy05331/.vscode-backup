{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "添加浏览器断点",
			"attach.node.process": "附加到 Node 进程(预览)",
			"chrome.address.description": "调试端口的 TCP/IP 地址。",
			"chrome.attach.description": "附加到已处于调试模式的 Chrome 实例",
			"chrome.attach.label": "Chrome: 附加",
			"chrome.baseUrl.description": "用于解析路径 baseUrl 的基本 URL。 将 URL 映射到磁盘上的文件时，将修剪 baseURL。 默认为启动 URL 域。",
			"chrome.cwd.description": "运行时程序的工作目录(可选)。",
			"chrome.disableNetworkCache.description": "控制每次请求是否跳过网络缓存",
			"chrome.env.description": "浏览器的环境键/值对的可选字典。",
			"chrome.file.description": "由浏览器打开的本地 html 文件",
			"chrome.label": "Chrome (预览版)",
			"chrome.launch.description": "启动 Chrome 以调试 URL",
			"chrome.launch.label": "Chrome: 启动",
			"chrome.pathMapping.description": "URL 或路径到本地文件夹的映射，用于在 Chrome 中将脚本解析为本地脚本",
			"chrome.port.description": "用于 Chrome 远程调试的端口。",
			"chrome.runtimeArgs.description": "传递给运行时可执行文件的可选参数。",
			"chrome.runtimeExecutable.description": "\"canary\"、\"stable\"、\"custom\" 或浏览器可执行文件的路径。 Custom 表示自定义包装器、自定义生成或 CHROME_PATH 环境变量。",
			"chrome.server.description": "配置要启动的 Web 服务器。采用与 \"node\" 启动任务相同的配置。",
			"chrome.showAsyncStacks.description": "显示导致当前调用堆栈的异步调用",
			"chrome.skipFiles.description": "将在调试时跳过的一组文件名、文件夹名或路径的 glob 模式。",
			"chrome.smartStep.description": "自动跳过源代码映射文件中未映射代码行。例如，TypeScript 在编译 async/await 或其他功能时自动生成的代码。",
			"chrome.sourceMapPathOverrides.description": "用于根据源映射所述重写源文件位置的一组映射，其将映射到磁盘上所处位置。请参阅自述文件了解详细信息。",
			"chrome.sourceMaps.description": "使用 JavaScript 源映射(如果存在)。",
			"chrome.timeout.description": "尝试连接到 Chrome 的等待时间 (单位: 毫秒)。默认值为 10000 ms。",
			"chrome.url.description": "将搜索具有此确切网址的标签并附加到该标签(若找到)",
			"chrome.urlFilter.description": "将搜索 URL 为此的页面，若找到则附加于其之上。可以包含 * 通配符。",
			"chrome.userDataDir.description": "默认时，将使用位于临时文件夹的单独用户配置文件启动 Chrome。请使用此选项进行覆盖。当设置为 \"false\" 时，将使用您的默认用户配置文件启动。",
			"chrome.webRoot.description": "指定网络服务器根目录的工作区绝对路径。用于将类似 \"/app.js\" 的路径解析到磁盘。隐含为 \"/\" 的 pathMapping 路径",
			"configuration.npmScriptLensLocation": "在 npm 脚本中应显示“运行”和“调试”代码的位置。 它可以在脚本部分的“全部”、脚本、脚本部分的“顶部”或“从不”上面。",
			"configuration.terminalOptions": "JavaScript 调试终端和 npm 脚本的默认启动选项。",
			"configuration.usePreview": "为 Node.js 和 Chrome 使用新的预览版 JavaScript 调试器。",
			"configuration.warnOnLongPrediction": "如果断点预测需要一段时间，是否应显示加载提示。",
			"debug.npm.edit": "编辑 package.json",
			"debug.npm.noScripts": "在 package.json 中找不到 npm 脚本",
			"debug.npm.noWorkspaceFolder": "需要打开工作区文件夹来调试 npm 脚本。",
			"debug.npm.parseError": "无法读取 {0}: {1}",
			"debug.npm.script": "调试 NPM 脚本",
			"debug.terminal.label": "创建 JavaScript 调试终端",
			"debug.terminal.program.description": "在启动的终端中运行命令。如果未提供命令，终端将在不启动程序的情况下打开。",
			"debug.terminal.snippet.label": "在调试终端中运行 \"npm start\"",
			"edge.useWebView.description": "(仅限 Microsoft Edge (Chromium)) 为“true”时，调试器会将运行时可执行文件视为包含 WebView 的主机应用程序，允许你调试 WebView 脚本内容。当设置为“高级”时，调试器将等待连接到与 urlFilter 匹配的 WebView。",
			"errors.timeout": "{0}: {1} 毫秒后超时",
			"extension.description": "用于调试 Node.js 程序和 Chrome 的扩展。",
			"extensionHost.label": "VS Code 扩展开发(预览)",
			"extensionHost.launch.config.name": "启动扩展",
			"extensionHost.launch.env.description": "传递到扩展主机的环境变量。",
			"extensionHost.launch.runtimeExecutable.description": "VS Code 的绝对路径。",
			"extensionHost.launch.stopOnEntry.description": "启动后自动停止扩展主机。",
			"extensionHost.snippet.launch.description": "在调试模式下启动 VS Code 扩展",
			"extensionHost.snippet.launch.label": "VS Code 扩展开发",
			"longPredictionWarning.disable": "不再显示",
			"longPredictionWarning.message": "配置断点需要一段时间。你可通过更新 launch.json 中的 \"outFiles\" 来加快速度。",
			"longPredictionWarning.noFolder": "未打开工作区文件夹。",
			"longPredictionWarning.open": "打开 launch.json 文件",
			"node.address.description": "要调试的进程的 TCP/IP 地址。默认值为 \"localhost\"。",
			"node.attach.attachExistingChildren.description": "是否尝试附加到已生成的子进程。",
			"node.attach.attachSpawnedProcesses.description": "是否在附加过程中设置环境变量以跟踪生成的子级。",
			"node.attach.config.name": "附加",
			"node.attach.processId.description": "要附加的进程 ID。",
			"node.attach.restart.description": "如果我们失去连接，请尝试重新连接到该程序。",
			"node.console.title": "Node 调试控制台",
			"node.disableOptimisticBPs.description": "在为文件加载 sourcemap 之前，请不要在此文件中设置断点。",
			"node.label": "Node.js (预览)",
			"node.launch.args.description": "传递给程序的命令行参数。",
			"node.launch.autoAttachChildProcesses.description": "自动将调试器附加到新的子进程。",
			"node.launch.config.name": "启动",
			"node.launch.console.description": "启动调试目标的位置。",
			"node.launch.console.externalTerminal.description": "可通过用户设置来配置的外部终端",
			"node.launch.console.integratedTerminal.description": "VS Code 的集成终端",
			"node.launch.console.internalConsole.description": "VS Code 调试控制台(不支持从程序读取输入)",
			"node.launch.cwd.description": "正在进行调试的程序的工作目录的绝对路径。",
			"node.launch.env.description": "传递给程序的环境变量。若值为 \"null\"，将从环境中移除变量。",
			"node.launch.envFile.description": "包含环境变量定义的文件的绝对路径。",
			"node.launch.logging": "日志记录配置",
			"node.launch.logging.cdp": "Chrome DevTools 协议消息的日志文件路径",
			"node.launch.logging.dap": "调试适配器协议消息的日志文件的路径",
			"node.launch.outputCapture.description": "捕获输出信息的位置: 调试 API 或者 stdout/stderr 流。",
			"node.launch.program.description": "程序的绝对路径。通过查看 package.json 和打开的文件猜测所生成的值。编辑此属性。",
			"node.launch.restart.description": "如果程序退出时带有非零的退出码，则尝试重启该程序。",
			"node.launch.runtimeArgs.description": "传递给运行时可执行文件的可选参数。",
			"node.launch.runtimeExecutable.description": "要使用的运行时。应为绝对路径或在 PATH 上可用的运行时名称。默认值为 \"node\"。",
			"node.launch.runtimeVersion.description": "要使用的 \"node\" 运行时版本。需要 \"nvm\"。",
			"node.launch.useWSL.deprecation": "已弃用 \"useWSL\" 并将停止对它的支持。请改用 \"Remote - WSL\" 扩展。",
			"node.launch.useWSL.description": "使用适用于 Linux 的 Windows 子系统。",
			"node.localRoot.description": "包含该程序的本地目录的路径。",
			"node.pauseForSourceMap.description": "是否等待每个传入脚本的源映射加载。 这会产生性能开销，只要没有禁用 rootPath，就可在磁盘空间不足时安全地禁用它。",
			"node.port.description": "调试要附加的端口。默认端口是 5858。",
			"node.processattach.config.name": "附加到进程",
			"node.remoteRoot.description": "包含该程序的远程目录的绝对路径。",
			"node.resolveSourceMapLocations.description": "可用源映射来解析本地文件的位置(文件夹和 URL)的小型匹配模式列表。这可用于避免造成外部源映射代码中错误地出现中断。使用前缀为 \"!\" 的模式可将这些中断排除。也可将其设置为空数组或 null 以避免限制。",
			"node.showAsyncStacks.description": "显示引导至当前调用堆栈的异步调用。",
			"node.snippet.attach.description": "附加到正在运行的 node 程序",
			"node.snippet.attach.label": "Node.js：附加",
			"node.snippet.attachProcess.description": "打开进程选取器并选择附加到的 node 进程",
			"node.snippet.attachProcess.label": "Node.js: 附加到进程",
			"node.snippet.electron.description": "调试 Electron 主进程",
			"node.snippet.electron.label": "Node.js: Electron 主进程",
			"node.snippet.gulp.description": "调试 Gulp 任务(确保项目中已安装本地 Gulp)",
			"node.snippet.gulp.label": "Node.js: Gulp 任务",
			"node.snippet.launch.description": "在调试模式下启动节点计划",
			"node.snippet.launch.label": "Node.js: 启动程序",
			"node.snippet.mocha.description": "调试 mocha 测试",
			"node.snippet.mocha.label": "Node.js: Mocha 测试",
			"node.snippet.nodemon.description": "使用 nodemon 以在源更改时重新启动调试会话",
			"node.snippet.nodemon.label": "Node.js: Nodemon 安装程序",
			"node.snippet.npm.description": "通过 npm \"debug\" 脚本启动 node 程序",
			"node.snippet.npm.label": "Node.js: 通过 NPM 启动",
			"node.snippet.remoteattach.description": "附加到远程节点计划的调试端口",
			"node.snippet.remoteattach.label": "Node.js: 附加到远程程序",
			"node.snippet.yo.description": "调试 yeoman 生成器 (通过在项目文件夹中运行 \"npm link\" 进行安装)",
			"node.snippet.yo.label": "Node.js: Yeoman 生成器",
			"node.sourceMapPathOverrides.description": "一组重写源映射中源文件的位置为磁盘上所处位置的映射。",
			"node.sourceMaps.description": "使用 JavaScript 源映射(如果存在)。",
			"node.stopOnEntry.description": "启动后自动停止程序。",
			"node.timeout.description": "重试连接到 Node.js 的此毫秒数。默认值为 10000 ms。",
			"open.loaded.script": "打开加载脚本",
			"outFiles.description": "如果启用了源映射，这些 glob 模式将指定生成的 JavaScript 文件。如果模式以 \"!\" 开始，则排除这些文件。如果未指定，则生成的代码应与其源代码位于同一目录。",
			"pretty.print.script": "用于调试的美观格式打印",
			"remove.browser.breakpoint": "删除浏览器断点",
			"remove.browser.breakpoint.all": "删除所有浏览器断点",
			"skipFiles.description": "调试时要跳过的文件的 glob 模式数组。模式 \"<node_internals>/**\" 与所有内部 Node.js 模块相匹配。",
			"smartStep.description": "自动单步执行无法映射回原始源的生成代码。",
			"start.with.stop.on.entry": "开始调试并在输入时停止",
			"toggle.skipping.this.file": "切换是否跳过此文件",
			"trace.boolean.description": "跟踪可设置为 \"true\"，以将诊断日志写入磁盘。",
			"trace.console.description": "配置是否还将日志返回到调试控制台。",
			"trace.description": "配置生成哪些诊断输出。",
			"trace.level.description": "配置已记录的日志的级别。",
			"trace.logFile.description": "配置磁盘日志的写入位置。",
			"trace.tags.description": "配置记录的日志类型。"
		}
	}
}